import math
# 1- Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.
# Дополнительно: можете проверить, что это действительно число, и что это действительно входит в нужный диапазон
#
# Пример:
#
# 6 -> да
# 7 -> да
# 1 -> нет

def is_weekend(num=int(input('Введите целое число от 1 до 7 : '))):
    if 1 <= num <= 7 and isinstance(num, int):
        if num >= 6:
            return "Сегодня отдыхаем"
        else:
            return "Пора работать"
    else:
        return "Вы ввели неверное значение, запустите программу заново"




# 2- Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
# Нужно написать таблицу истинности.

# def inputNumbers(x):
#     xyz = ["X", "Y", "Z"]
#     a = []
#     for i in range(x):
#         a.append(input(f"Введите значение {xyz[i]}: "))
#     return a
#
#
# def checkPredicate(x):
#     left = not (x[0] or x[1] or x[2])
#     right = not x[0] and not x[1] and not x[2]
#     result = left == right
#     return result
#
#
# statement = inputNumbers(3)
#
# if checkPredicate(statement) == True:
#     print(f"Утверждение истинно")
# else:
#     print(f"Утверждение ложно")

#Таблица истинности

# print('|X| |Y| |Z| |¬(X ⋁ Y ⋁ Z)| |¬X ⋀ ¬Y ⋀ ¬Z| |¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z|')
# p = [0, 1]
# k = [0, 1]
# f = [0, 1]
# for x in [0, 1]:
#     for y in [0, 1]:
#         for z in [0, 1]:
#             print(f' {x}   {y}   {z}',
#                   f'        {p[1]}' if not (x or y or z) else f'        {p[0]}',
#                   f'              {k[1]}' if not x and not y and not z else f'              {k[0]}',
#                   f'                     {f[1]}' if p == k else f'{f[0]}')

# 3- Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и
# выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).
#
# Пример:
#
# x=34; y=-30 -> 4
# x=2; y=4-> 1
# x=-34; y=-30 -> 3

# def point_in_quarter():
#     print('X / Введите целое число от -100 до 100 ')
#     x = input()
#     print('Y / Введите целое число от -100 до 100 ')
#     y = input()
#
#     try:
#         x = int(x)
#         y = int(y)
#     except:
#         print('Ошибочка. Введите целое число, а не буквы')
#         point_in_quarter()
#
#     print("Счет четвертей от 1 до 4 идёт от левого верхнего угла по часовой стрелке")
#     if (100 >= x >= -100) and (100 >= y >= -100):
#         if 0 > x >= -100 and 100 >= y > 0:
#             print("Заданная точка относится к 1 четверти")
#         elif 100 >= x > 0 and 100 >= y > 0:
#             print("Заданная точка относится ко 2 четверти")
#         elif 100 >= x > 0 and  0 > y >= -100:
#             print("Заданная точка относится к 3 четверти")
#         elif 0 > x >= -100 and 0 > y >= -100:
#             print("Заданная точка относится к 4 четверти")
#         else:
#             print("Заданная точка лежит на границе между четвертями")
#     else:
#         print("Вы вышли за пределы обозначенного интервала или ввели неверный формат, попробуйте еще раз")
#         point_in_quarter()

# 4-Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y).
# Пример:
# - quarter = 1 => x∈(0, ∞) u y∈(0,∞)

# def values_of_auarter():
#     print("Введите целое число от 1 до 4 соответствующее номеру четверти")
#     quarter = input()
#     try:
#         quarter = int(quarter)
#     except:
#         print('Ошибочка. Введите целое число, а не буквы')
#         values_of_auarter()
#     if 0 < quarter <= 4:
#         if quarter==1:
#             print("X ∈ (0, -∞); Y ∈ (0, ∞)")
#         elif quarter==2:
#             print("X ∈ (0, ∞); Y ∈ (0, ∞)")
#         elif quarter == 3:
#             print("X ∈ (0, ∞); Y ∈ (0, -∞)")
#         elif quarter == 4:
#             print("X ∈ (0, -∞); Y ∈ (0, -∞)")
#     else:
#         print('Ошибочка. Вы вышли за границы нужного интервала 1 - 4')
#         values_of_auarter()
#
# values_of_auarter()
# 5- Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.
#
# Пример:
#
# A (3,6); B (2,1) -> 5.09
# A (7,-5); B (1,-1) -> 7.21

# def distance_two_point_2d():
#     ax = float(input("Введите значение ax (от -100 до 100) "))
#     ay = float(input("Введите значение ay (от -100 до 100) "))
#     bx = float(input("Введите значение ax (от -100 до 100) "))
#     by = float(input("Введите значение ax (от -100 до 100) "))
#     if (100 >= ax >= -100) and (100 >= ay >= -100) and (100 >= bx >= -100) and (100 >= by >= -100):
#         result = math.sqrt(math.pow((ax - bx), 2)) + (math.pow((ay - by), 2))
#         print(f"Расстояние между точками A и B = {result}")
#     else:
#         print("Вы вышли за пределы обозначенного интервала, попробуйте еще раз")
#
# distance_two_point_2d()
